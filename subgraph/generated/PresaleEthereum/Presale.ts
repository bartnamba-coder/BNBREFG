// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class FundsWithdrawn extends ethereum.Event {
  get params(): FundsWithdrawn__Params {
    return new FundsWithdrawn__Params(this);
  }
}

export class FundsWithdrawn__Params {
  _event: FundsWithdrawn;

  constructor(event: FundsWithdrawn) {
    this._event = event;
  }

  get to(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ReferralPurchase extends ethereum.Event {
  get params(): ReferralPurchase__Params {
    return new ReferralPurchase__Params(this);
  }
}

export class ReferralPurchase__Params {
  _event: ReferralPurchase;

  constructor(event: ReferralPurchase) {
    this._event = event;
  }

  get referrer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get buyer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get usdAmount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get nativeCurrencyPaid(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get cashbackAmount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get bonusPercent(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get newReferralCount(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class ReferralWithdrawn extends ethereum.Event {
  get params(): ReferralWithdrawn__Params {
    return new ReferralWithdrawn__Params(this);
  }
}

export class ReferralWithdrawn__Params {
  _event: ReferralWithdrawn;

  constructor(event: ReferralWithdrawn) {
    this._event = event;
  }

  get referrer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get totalWithdrawnToDate(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class StageTimeUpdated extends ethereum.Event {
  get params(): StageTimeUpdated__Params {
    return new StageTimeUpdated__Params(this);
  }
}

export class StageTimeUpdated__Params {
  _event: StageTimeUpdated;

  constructor(event: StageTimeUpdated) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newStart(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get newEnd(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class TokensWithdrawn extends ethereum.Event {
  get params(): TokensWithdrawn__Params {
    return new TokensWithdrawn__Params(this);
  }
}

export class TokensWithdrawn__Params {
  _event: TokensWithdrawn;

  constructor(event: TokensWithdrawn) {
    this._event = event;
  }

  get to(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Presale__getLatestWithdrawalResultValue0Struct extends ethereum.Tuple {
  get amount(): BigInt {
    return this[0].toBigInt();
  }

  get timestamp(): BigInt {
    return this[1].toBigInt();
  }

  get blockNumber(): BigInt {
    return this[2].toBigInt();
  }
}

export class Presale__getReferrerInfoResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    return map;
  }

  getTotalReferrals(): BigInt {
    return this.value0;
  }

  getPendingCashback(): BigInt {
    return this.value1;
  }

  getBonusPercentage(): BigInt {
    return this.value2;
  }

  getNextWithdrawalTime(): BigInt {
    return this.value3;
  }

  getTotalEarned(): BigInt {
    return this.value4;
  }

  getWithdrawalCount(): BigInt {
    return this.value5;
  }
}

export class Presale__getWithdrawalHistoryResultValue0Struct extends ethereum.Tuple {
  get amount(): BigInt {
    return this[0].toBigInt();
  }

  get timestamp(): BigInt {
    return this[1].toBigInt();
  }

  get blockNumber(): BigInt {
    return this[2].toBigInt();
  }
}

export class Presale__getWithdrawalsPaginatedResultValue0Struct extends ethereum.Tuple {
  get amount(): BigInt {
    return this[0].toBigInt();
  }

  get timestamp(): BigInt {
    return this[1].toBigInt();
  }

  get blockNumber(): BigInt {
    return this[2].toBigInt();
  }
}

export class Presale__stagesResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    return map;
  }

  getId(): BigInt {
    return this.value0;
  }

  getBonus(): BigInt {
    return this.value1;
  }

  getPrice(): BigInt {
    return this.value2;
  }

  getStart(): BigInt {
    return this.value3;
  }

  getEnd(): BigInt {
    return this.value4;
  }
}

export class Presale__withdrawalHistoryResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }

  getAmount(): BigInt {
    return this.value0;
  }

  getTimestamp(): BigInt {
    return this.value1;
  }

  getBlockNumber(): BigInt {
    return this.value2;
  }
}

export class Presale extends ethereum.SmartContract {
  static bind(address: Address): Presale {
    return new Presale("Presale", address);
  }

  calculateRequiredPayment(tokenAmount: BigInt): BigInt {
    let result = super.call(
      "calculateRequiredPayment",
      "calculateRequiredPayment(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(tokenAmount)],
    );

    return result[0].toBigInt();
  }

  try_calculateRequiredPayment(
    tokenAmount: BigInt,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "calculateRequiredPayment",
      "calculateRequiredPayment(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(tokenAmount)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  calculateTokenAmount(weiAmount: BigInt): BigInt {
    let result = super.call(
      "calculateTokenAmount",
      "calculateTokenAmount(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(weiAmount)],
    );

    return result[0].toBigInt();
  }

  try_calculateTokenAmount(weiAmount: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "calculateTokenAmount",
      "calculateTokenAmount(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(weiAmount)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getCurrentStageIdActive(): BigInt {
    let result = super.call(
      "getCurrentStageIdActive",
      "getCurrentStageIdActive():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_getCurrentStageIdActive(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getCurrentStageIdActive",
      "getCurrentStageIdActive():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getLatestWithdrawal(
    _user: Address,
  ): Presale__getLatestWithdrawalResultValue0Struct {
    let result = super.call(
      "getLatestWithdrawal",
      "getLatestWithdrawal(address):((uint256,uint256,uint256))",
      [ethereum.Value.fromAddress(_user)],
    );

    return changetype<Presale__getLatestWithdrawalResultValue0Struct>(
      result[0].toTuple(),
    );
  }

  try_getLatestWithdrawal(
    _user: Address,
  ): ethereum.CallResult<Presale__getLatestWithdrawalResultValue0Struct> {
    let result = super.tryCall(
      "getLatestWithdrawal",
      "getLatestWithdrawal(address):((uint256,uint256,uint256))",
      [ethereum.Value.fromAddress(_user)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Presale__getLatestWithdrawalResultValue0Struct>(
        value[0].toTuple(),
      ),
    );
  }

  getMinimumBuyWei(): BigInt {
    let result = super.call(
      "getMinimumBuyWei",
      "getMinimumBuyWei():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_getMinimumBuyWei(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getMinimumBuyWei",
      "getMinimumBuyWei():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getNativeCurrencyPrice(): BigInt {
    let result = super.call(
      "getNativeCurrencyPrice",
      "getNativeCurrencyPrice():(int256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_getNativeCurrencyPrice(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getNativeCurrencyPrice",
      "getNativeCurrencyPrice():(int256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getReferralBonusPercentage(totalBuyers: BigInt): BigInt {
    let result = super.call(
      "getReferralBonusPercentage",
      "getReferralBonusPercentage(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(totalBuyers)],
    );

    return result[0].toBigInt();
  }

  try_getReferralBonusPercentage(
    totalBuyers: BigInt,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getReferralBonusPercentage",
      "getReferralBonusPercentage(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(totalBuyers)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getReferrerInfo(_referrer: Address): Presale__getReferrerInfoResult {
    let result = super.call(
      "getReferrerInfo",
      "getReferrerInfo(address):(uint256,uint256,uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromAddress(_referrer)],
    );

    return new Presale__getReferrerInfoResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
    );
  }

  try_getReferrerInfo(
    _referrer: Address,
  ): ethereum.CallResult<Presale__getReferrerInfoResult> {
    let result = super.tryCall(
      "getReferrerInfo",
      "getReferrerInfo(address):(uint256,uint256,uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromAddress(_referrer)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Presale__getReferrerInfoResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt(),
      ),
    );
  }

  getWithdrawalCount(_user: Address): BigInt {
    let result = super.call(
      "getWithdrawalCount",
      "getWithdrawalCount(address):(uint256)",
      [ethereum.Value.fromAddress(_user)],
    );

    return result[0].toBigInt();
  }

  try_getWithdrawalCount(_user: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getWithdrawalCount",
      "getWithdrawalCount(address):(uint256)",
      [ethereum.Value.fromAddress(_user)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getWithdrawalHistory(
    _user: Address,
  ): Array<Presale__getWithdrawalHistoryResultValue0Struct> {
    let result = super.call(
      "getWithdrawalHistory",
      "getWithdrawalHistory(address):((uint256,uint256,uint256)[])",
      [ethereum.Value.fromAddress(_user)],
    );

    return result[0].toTupleArray<Presale__getWithdrawalHistoryResultValue0Struct>();
  }

  try_getWithdrawalHistory(
    _user: Address,
  ): ethereum.CallResult<
    Array<Presale__getWithdrawalHistoryResultValue0Struct>
  > {
    let result = super.tryCall(
      "getWithdrawalHistory",
      "getWithdrawalHistory(address):((uint256,uint256,uint256)[])",
      [ethereum.Value.fromAddress(_user)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<Presale__getWithdrawalHistoryResultValue0Struct>(),
    );
  }

  getWithdrawalsPaginated(
    _user: Address,
    _offset: BigInt,
    _limit: BigInt,
  ): Array<Presale__getWithdrawalsPaginatedResultValue0Struct> {
    let result = super.call(
      "getWithdrawalsPaginated",
      "getWithdrawalsPaginated(address,uint256,uint256):((uint256,uint256,uint256)[])",
      [
        ethereum.Value.fromAddress(_user),
        ethereum.Value.fromUnsignedBigInt(_offset),
        ethereum.Value.fromUnsignedBigInt(_limit),
      ],
    );

    return result[0].toTupleArray<Presale__getWithdrawalsPaginatedResultValue0Struct>();
  }

  try_getWithdrawalsPaginated(
    _user: Address,
    _offset: BigInt,
    _limit: BigInt,
  ): ethereum.CallResult<
    Array<Presale__getWithdrawalsPaginatedResultValue0Struct>
  > {
    let result = super.tryCall(
      "getWithdrawalsPaginated",
      "getWithdrawalsPaginated(address,uint256,uint256):((uint256,uint256,uint256)[])",
      [
        ethereum.Value.fromAddress(_user),
        ethereum.Value.fromUnsignedBigInt(_offset),
        ethereum.Value.fromUnsignedBigInt(_limit),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<Presale__getWithdrawalsPaginatedResultValue0Struct>(),
    );
  }

  lastWithdrawal(param0: Address): BigInt {
    let result = super.call(
      "lastWithdrawal",
      "lastWithdrawal(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );

    return result[0].toBigInt();
  }

  try_lastWithdrawal(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "lastWithdrawal",
      "lastWithdrawal(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  maxStage(): BigInt {
    let result = super.call("maxStage", "maxStage():(uint256)", []);

    return result[0].toBigInt();
  }

  try_maxStage(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("maxStage", "maxStage():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  minReferralPayoutBnb(): BigInt {
    let result = super.call(
      "minReferralPayoutBnb",
      "minReferralPayoutBnb():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_minReferralPayoutBnb(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "minReferralPayoutBnb",
      "minReferralPayoutBnb():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  minReferralPayoutEth(): BigInt {
    let result = super.call(
      "minReferralPayoutEth",
      "minReferralPayoutEth():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_minReferralPayoutEth(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "minReferralPayoutEth",
      "minReferralPayoutEth():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  minimumBuyUsd(): BigInt {
    let result = super.call("minimumBuyUsd", "minimumBuyUsd():(uint256)", []);

    return result[0].toBigInt();
  }

  try_minimumBuyUsd(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "minimumBuyUsd",
      "minimumBuyUsd():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paymentAddress(): Address {
    let result = super.call("paymentAddress", "paymentAddress():(address)", []);

    return result[0].toAddress();
  }

  try_paymentAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "paymentAddress",
      "paymentAddress():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  presaleActive(): boolean {
    let result = super.call("presaleActive", "presaleActive():(bool)", []);

    return result[0].toBoolean();
  }

  try_presaleActive(): ethereum.CallResult<boolean> {
    let result = super.tryCall("presaleActive", "presaleActive():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  presaleTokenAmount(): BigInt {
    let result = super.call(
      "presaleTokenAmount",
      "presaleTokenAmount():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_presaleTokenAmount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "presaleTokenAmount",
      "presaleTokenAmount():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  priceFeed(): Address {
    let result = super.call("priceFeed", "priceFeed():(address)", []);

    return result[0].toAddress();
  }

  try_priceFeed(): ethereum.CallResult<Address> {
    let result = super.tryCall("priceFeed", "priceFeed():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  referralBonus(param0: Address): BigInt {
    let result = super.call(
      "referralBonus",
      "referralBonus(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );

    return result[0].toBigInt();
  }

  try_referralBonus(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "referralBonus",
      "referralBonus(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  referralBonuses(param0: BigInt): BigInt {
    let result = super.call(
      "referralBonuses",
      "referralBonuses(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );

    return result[0].toBigInt();
  }

  try_referralBonuses(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "referralBonuses",
      "referralBonuses(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  referralBuyerTiers(param0: BigInt): BigInt {
    let result = super.call(
      "referralBuyerTiers",
      "referralBuyerTiers(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );

    return result[0].toBigInt();
  }

  try_referralBuyerTiers(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "referralBuyerTiers",
      "referralBuyerTiers(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  referralCounts(param0: Address): BigInt {
    let result = super.call(
      "referralCounts",
      "referralCounts(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );

    return result[0].toBigInt();
  }

  try_referralCounts(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "referralCounts",
      "referralCounts(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  stages(param0: BigInt): Presale__stagesResult {
    let result = super.call(
      "stages",
      "stages(uint256):(uint256,uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );

    return new Presale__stagesResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
    );
  }

  try_stages(param0: BigInt): ethereum.CallResult<Presale__stagesResult> {
    let result = super.tryCall(
      "stages",
      "stages(uint256):(uint256,uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Presale__stagesResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
      ),
    );
  }

  token(): Address {
    let result = super.call("token", "token():(address)", []);

    return result[0].toAddress();
  }

  try_token(): ethereum.CallResult<Address> {
    let result = super.tryCall("token", "token():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  tokenMetadata(): Address {
    let result = super.call("tokenMetadata", "tokenMetadata():(address)", []);

    return result[0].toAddress();
  }

  try_tokenMetadata(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "tokenMetadata",
      "tokenMetadata():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  totalSold(): BigInt {
    let result = super.call("totalSold", "totalSold():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalSold(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalSold", "totalSold():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalWithdrawn(param0: Address): BigInt {
    let result = super.call(
      "totalWithdrawn",
      "totalWithdrawn(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );

    return result[0].toBigInt();
  }

  try_totalWithdrawn(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalWithdrawn",
      "totalWithdrawn(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  weiToUsd(weiAmount: BigInt): BigInt {
    let result = super.call("weiToUsd", "weiToUsd(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(weiAmount),
    ]);

    return result[0].toBigInt();
  }

  try_weiToUsd(weiAmount: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall("weiToUsd", "weiToUsd(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(weiAmount),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  withdrawalCooldown(): BigInt {
    let result = super.call(
      "withdrawalCooldown",
      "withdrawalCooldown():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_withdrawalCooldown(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "withdrawalCooldown",
      "withdrawalCooldown():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  withdrawalHistory(
    param0: Address,
    param1: BigInt,
  ): Presale__withdrawalHistoryResult {
    let result = super.call(
      "withdrawalHistory",
      "withdrawalHistory(address,uint256):(uint256,uint256,uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
      ],
    );

    return new Presale__withdrawalHistoryResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
    );
  }

  try_withdrawalHistory(
    param0: Address,
    param1: BigInt,
  ): ethereum.CallResult<Presale__withdrawalHistoryResult> {
    let result = super.tryCall(
      "withdrawalHistory",
      "withdrawalHistory(address,uint256):(uint256,uint256,uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Presale__withdrawalHistoryResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
      ),
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _payment(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _token(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _priceFeed(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _minReferralPayoutEth(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _minReferralPayoutBnb(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddStageCall extends ethereum.Call {
  get inputs(): AddStageCall__Inputs {
    return new AddStageCall__Inputs(this);
  }

  get outputs(): AddStageCall__Outputs {
    return new AddStageCall__Outputs(this);
  }
}

export class AddStageCall__Inputs {
  _call: AddStageCall;

  constructor(call: AddStageCall) {
    this._call = call;
  }

  get _bonus(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _price(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _start(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _end(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class AddStageCall__Outputs {
  _call: AddStageCall;

  constructor(call: AddStageCall) {
    this._call = call;
  }
}

export class BuyTokenCall extends ethereum.Call {
  get inputs(): BuyTokenCall__Inputs {
    return new BuyTokenCall__Inputs(this);
  }

  get outputs(): BuyTokenCall__Outputs {
    return new BuyTokenCall__Outputs(this);
  }
}

export class BuyTokenCall__Inputs {
  _call: BuyTokenCall;

  constructor(call: BuyTokenCall) {
    this._call = call;
  }

  get _referrer(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class BuyTokenCall__Outputs {
  _call: BuyTokenCall;

  constructor(call: BuyTokenCall) {
    this._call = call;
  }
}

export class BuyToken1Call extends ethereum.Call {
  get inputs(): BuyToken1Call__Inputs {
    return new BuyToken1Call__Inputs(this);
  }

  get outputs(): BuyToken1Call__Outputs {
    return new BuyToken1Call__Outputs(this);
  }
}

export class BuyToken1Call__Inputs {
  _call: BuyToken1Call;

  constructor(call: BuyToken1Call) {
    this._call = call;
  }
}

export class BuyToken1Call__Outputs {
  _call: BuyToken1Call;

  constructor(call: BuyToken1Call) {
    this._call = call;
  }
}

export class EmergencyWithdrawReferralFundsCall extends ethereum.Call {
  get inputs(): EmergencyWithdrawReferralFundsCall__Inputs {
    return new EmergencyWithdrawReferralFundsCall__Inputs(this);
  }

  get outputs(): EmergencyWithdrawReferralFundsCall__Outputs {
    return new EmergencyWithdrawReferralFundsCall__Outputs(this);
  }
}

export class EmergencyWithdrawReferralFundsCall__Inputs {
  _call: EmergencyWithdrawReferralFundsCall;

  constructor(call: EmergencyWithdrawReferralFundsCall) {
    this._call = call;
  }
}

export class EmergencyWithdrawReferralFundsCall__Outputs {
  _call: EmergencyWithdrawReferralFundsCall;

  constructor(call: EmergencyWithdrawReferralFundsCall) {
    this._call = call;
  }
}

export class FlipPresaleActiveCall extends ethereum.Call {
  get inputs(): FlipPresaleActiveCall__Inputs {
    return new FlipPresaleActiveCall__Inputs(this);
  }

  get outputs(): FlipPresaleActiveCall__Outputs {
    return new FlipPresaleActiveCall__Outputs(this);
  }
}

export class FlipPresaleActiveCall__Inputs {
  _call: FlipPresaleActiveCall;

  constructor(call: FlipPresaleActiveCall) {
    this._call = call;
  }
}

export class FlipPresaleActiveCall__Outputs {
  _call: FlipPresaleActiveCall;

  constructor(call: FlipPresaleActiveCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetMaxStageCall extends ethereum.Call {
  get inputs(): SetMaxStageCall__Inputs {
    return new SetMaxStageCall__Inputs(this);
  }

  get outputs(): SetMaxStageCall__Outputs {
    return new SetMaxStageCall__Outputs(this);
  }
}

export class SetMaxStageCall__Inputs {
  _call: SetMaxStageCall;

  constructor(call: SetMaxStageCall) {
    this._call = call;
  }

  get _maxStage(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMaxStageCall__Outputs {
  _call: SetMaxStageCall;

  constructor(call: SetMaxStageCall) {
    this._call = call;
  }
}

export class SetMinimumBuyUsdCall extends ethereum.Call {
  get inputs(): SetMinimumBuyUsdCall__Inputs {
    return new SetMinimumBuyUsdCall__Inputs(this);
  }

  get outputs(): SetMinimumBuyUsdCall__Outputs {
    return new SetMinimumBuyUsdCall__Outputs(this);
  }
}

export class SetMinimumBuyUsdCall__Inputs {
  _call: SetMinimumBuyUsdCall;

  constructor(call: SetMinimumBuyUsdCall) {
    this._call = call;
  }

  get _minimumUsd(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMinimumBuyUsdCall__Outputs {
  _call: SetMinimumBuyUsdCall;

  constructor(call: SetMinimumBuyUsdCall) {
    this._call = call;
  }
}

export class SetPaymentAddressCall extends ethereum.Call {
  get inputs(): SetPaymentAddressCall__Inputs {
    return new SetPaymentAddressCall__Inputs(this);
  }

  get outputs(): SetPaymentAddressCall__Outputs {
    return new SetPaymentAddressCall__Outputs(this);
  }
}

export class SetPaymentAddressCall__Inputs {
  _call: SetPaymentAddressCall;

  constructor(call: SetPaymentAddressCall) {
    this._call = call;
  }

  get _paymentAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetPaymentAddressCall__Outputs {
  _call: SetPaymentAddressCall;

  constructor(call: SetPaymentAddressCall) {
    this._call = call;
  }
}

export class SetPresaleTokenAmountCall extends ethereum.Call {
  get inputs(): SetPresaleTokenAmountCall__Inputs {
    return new SetPresaleTokenAmountCall__Inputs(this);
  }

  get outputs(): SetPresaleTokenAmountCall__Outputs {
    return new SetPresaleTokenAmountCall__Outputs(this);
  }
}

export class SetPresaleTokenAmountCall__Inputs {
  _call: SetPresaleTokenAmountCall;

  constructor(call: SetPresaleTokenAmountCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetPresaleTokenAmountCall__Outputs {
  _call: SetPresaleTokenAmountCall;

  constructor(call: SetPresaleTokenAmountCall) {
    this._call = call;
  }
}

export class SetPriceFeedCall extends ethereum.Call {
  get inputs(): SetPriceFeedCall__Inputs {
    return new SetPriceFeedCall__Inputs(this);
  }

  get outputs(): SetPriceFeedCall__Outputs {
    return new SetPriceFeedCall__Outputs(this);
  }
}

export class SetPriceFeedCall__Inputs {
  _call: SetPriceFeedCall;

  constructor(call: SetPriceFeedCall) {
    this._call = call;
  }

  get _priceFeed(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetPriceFeedCall__Outputs {
  _call: SetPriceFeedCall;

  constructor(call: SetPriceFeedCall) {
    this._call = call;
  }
}

export class SetStageCall extends ethereum.Call {
  get inputs(): SetStageCall__Inputs {
    return new SetStageCall__Inputs(this);
  }

  get outputs(): SetStageCall__Outputs {
    return new SetStageCall__Outputs(this);
  }
}

export class SetStageCall__Inputs {
  _call: SetStageCall;

  constructor(call: SetStageCall) {
    this._call = call;
  }

  get _id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _bonus(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _price(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _start(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _end(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class SetStageCall__Outputs {
  _call: SetStageCall;

  constructor(call: SetStageCall) {
    this._call = call;
  }
}

export class SetTokenCall extends ethereum.Call {
  get inputs(): SetTokenCall__Inputs {
    return new SetTokenCall__Inputs(this);
  }

  get outputs(): SetTokenCall__Outputs {
    return new SetTokenCall__Outputs(this);
  }
}

export class SetTokenCall__Inputs {
  _call: SetTokenCall;

  constructor(call: SetTokenCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetTokenCall__Outputs {
  _call: SetTokenCall;

  constructor(call: SetTokenCall) {
    this._call = call;
  }
}

export class SetTotalSoldCall extends ethereum.Call {
  get inputs(): SetTotalSoldCall__Inputs {
    return new SetTotalSoldCall__Inputs(this);
  }

  get outputs(): SetTotalSoldCall__Outputs {
    return new SetTotalSoldCall__Outputs(this);
  }
}

export class SetTotalSoldCall__Inputs {
  _call: SetTotalSoldCall;

  constructor(call: SetTotalSoldCall) {
    this._call = call;
  }

  get _totalSold(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetTotalSoldCall__Outputs {
  _call: SetTotalSoldCall;

  constructor(call: SetTotalSoldCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpdateStageEndTimeCall extends ethereum.Call {
  get inputs(): UpdateStageEndTimeCall__Inputs {
    return new UpdateStageEndTimeCall__Inputs(this);
  }

  get outputs(): UpdateStageEndTimeCall__Outputs {
    return new UpdateStageEndTimeCall__Outputs(this);
  }
}

export class UpdateStageEndTimeCall__Inputs {
  _call: UpdateStageEndTimeCall;

  constructor(call: UpdateStageEndTimeCall) {
    this._call = call;
  }

  get _id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _newEnd(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UpdateStageEndTimeCall__Outputs {
  _call: UpdateStageEndTimeCall;

  constructor(call: UpdateStageEndTimeCall) {
    this._call = call;
  }
}

export class UpdateStageStartTimeCall extends ethereum.Call {
  get inputs(): UpdateStageStartTimeCall__Inputs {
    return new UpdateStageStartTimeCall__Inputs(this);
  }

  get outputs(): UpdateStageStartTimeCall__Outputs {
    return new UpdateStageStartTimeCall__Outputs(this);
  }
}

export class UpdateStageStartTimeCall__Inputs {
  _call: UpdateStageStartTimeCall;

  constructor(call: UpdateStageStartTimeCall) {
    this._call = call;
  }

  get _id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _newStart(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UpdateStageStartTimeCall__Outputs {
  _call: UpdateStageStartTimeCall;

  constructor(call: UpdateStageStartTimeCall) {
    this._call = call;
  }
}

export class WithdrawFundsCall extends ethereum.Call {
  get inputs(): WithdrawFundsCall__Inputs {
    return new WithdrawFundsCall__Inputs(this);
  }

  get outputs(): WithdrawFundsCall__Outputs {
    return new WithdrawFundsCall__Outputs(this);
  }
}

export class WithdrawFundsCall__Inputs {
  _call: WithdrawFundsCall;

  constructor(call: WithdrawFundsCall) {
    this._call = call;
  }
}

export class WithdrawFundsCall__Outputs {
  _call: WithdrawFundsCall;

  constructor(call: WithdrawFundsCall) {
    this._call = call;
  }
}

export class WithdrawReferralBonusCall extends ethereum.Call {
  get inputs(): WithdrawReferralBonusCall__Inputs {
    return new WithdrawReferralBonusCall__Inputs(this);
  }

  get outputs(): WithdrawReferralBonusCall__Outputs {
    return new WithdrawReferralBonusCall__Outputs(this);
  }
}

export class WithdrawReferralBonusCall__Inputs {
  _call: WithdrawReferralBonusCall;

  constructor(call: WithdrawReferralBonusCall) {
    this._call = call;
  }
}

export class WithdrawReferralBonusCall__Outputs {
  _call: WithdrawReferralBonusCall;

  constructor(call: WithdrawReferralBonusCall) {
    this._call = call;
  }
}

export class WithdrawTokensCall extends ethereum.Call {
  get inputs(): WithdrawTokensCall__Inputs {
    return new WithdrawTokensCall__Inputs(this);
  }

  get outputs(): WithdrawTokensCall__Outputs {
    return new WithdrawTokensCall__Outputs(this);
  }
}

export class WithdrawTokensCall__Inputs {
  _call: WithdrawTokensCall;

  constructor(call: WithdrawTokensCall) {
    this._call = call;
  }

  get _to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class WithdrawTokensCall__Outputs {
  _call: WithdrawTokensCall;

  constructor(call: WithdrawTokensCall) {
    this._call = call;
  }
}
